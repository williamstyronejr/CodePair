name: deploy

on:
  push:
    branches: [main]
  pull_request: {}

jobs:
  main:
    runs-on: ubuntu-latest

    # Took From https://docs.github.com/en/actions/using-containerized-services/creating-redis-service-containers
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dep
        uses: bahmutov/npm-install@v1
        with:
          working-directory: |
            server
            client
            launcher

      - name: Build images
        run: docker build ./launcher --no-cache -t ${{secrets.IMAGE_NODE}}

      - name: Run Client Tests
        run: npm run test --prefix client

      - name: Run Server Tests
        run: npm run test --prefix server
        env:
          GITHUB_ID: ${{secrets.GH_ID}}
          GITHUB_SECRET: ${{secrets.GH_SECRET}}
          GITHUB_CALLBACK: ${{secrets.GH_CALLBACK}}
          DB_TEST_URI: ${{secrets.DB_TEST_URI}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          REDIS_HOST: redis
          REDIS_PORT: 6379

      - name: Server/Client Deploy
        #  Only deploy main branch on pushes
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SSH_CLIENT_HOST}}
          username: ${{secrets.SSH_CLIENT_USERNAME}}
          key: ${{secrets.SSH_KEY}}
          passphrase: ${{secrets.SSH_PASSPHRASE}}
          script: |
            source ~/.bashrc
            nvm use default
            cd app
            git stash
            git pull
            cd client
            npm install
            npm run build
            cd ..
            cd server
            npm install
            npm run production

      - name: Launcher Deployer
        #  Only deploy main branch on pushes
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USERNAME}}
          key: ${{secrets.SSH_KEY}}
          passphrase: ${{secrets.SSH_PASSPHRASE}}
          script: |
            source ~/.bashrc
            nvm use default
            cd app
            git stash
            git pull
            npm install
            cd launcher
            npm install
            docker build . --no-cache -t ${{secrets.IMAGE_NODE}}
            cd ..
            npm run launcher:prod
